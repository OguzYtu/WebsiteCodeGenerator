[comment encoding = UTF-8 /]
[module generate('http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]

[import org::eclipse::acceleo::module::website::generator::common::config/]
[import org::eclipse::acceleo::module::website::generator::common::index/]
[import org::eclipse::acceleo::module::website::generator::common::gallery/]
[import org::eclipse::acceleo::module::website::generator::common::imageIndex/]
[import org::eclipse::acceleo::module::website::generator::common::input/]
[import org::eclipse::acceleo::module::website::generator::common::slider/]
[import org::eclipse::acceleo::module::website::generator::common::staticunit/]
[import org::eclipse::acceleo::module::website::generator::common::details/]
[import org::eclipse::acceleo::module::website::generator::orm::generateORM/]
[import org::eclipse::acceleo::module::website::generator::service::generateService/]
[import org::eclipse::acceleo::module::website::generator::common::controllerclasses/]
[import org::eclipse::acceleo::module::website::generator::common::autogeneratedpages/]
[import org::eclipse::acceleo::module::website::generator::common::authentication/]
[import org::eclipse::acceleo::module::website::generator::common::errorpagenerator/]
[import org::eclipse::acceleo::module::website::generator::common::editstatictextpagenerator/]
[import org::eclipse::acceleo::module::website::generator::common::testgenerator/]

[template public generateElement(model : WafModel)]
[comment @main/]

[model.generateConfigXML()/]

[comment]Assuming that authentication system will only be local not cas[/comment]
[if (model.authentication->notEmpty())]
	[let auth : LocalAuthenticationSystem = model.authentication.oclAsType(LocalAuthenticationSystem)]

[comment]Assuming that there will be only one log-in, one registration and one forgotten password page in the model[/comment]
	[for (p : Page | model.pages)]
	[if (p.units->at(1).oclIsTypeOf(LoginUnit))]
		[model.generateLogin(p)/]
	[elseif  (p.units->at(1).oclIsTypeOf(ForgottenPasswordUnit))]
		[model.generateForgottenPasswordPages(p)/]
	[elseif  (p.units->at(1).oclIsTypeOf(RegistrationUnit))]
		[if (auth.allowSelfRegistration)]
		[model.generateRegistration(p)/]
		[/if]
	[/if]
	[/for]

	[/let]
[/if]

[model.generateBeginningOfWebController()/]
[for (p : Page | model.pages)]
	[if (p.units->at(1).oclIsTypeOf(LoginUnit) = false and p.units->at(1).oclIsTypeOf(RegistrationUnit) = false and p.units->at(1).oclIsTypeOf(ForgottenPasswordUnit) = false)]
	[p.generateBodyOfWebController(model)/]
	[/if]
[/for]
[model.generateEndOfWebController()/]

[model.generateErrorPage()/]
[model.generateEditStatixTextPage()/]

[for (p : Page | model.pages)]
	[if (p.units->at(1).oclIsTypeOf(LoginUnit) = false and p.units->at(1).oclIsTypeOf(RegistrationUnit) = false and p.units->at(1).oclIsTypeOf(ForgottenPasswordUnit) = false)]
	[p.generateBeginningOfPages(model, p.name)/]
	[p.generateBodyOfPages(model, p.name)/]
	[p.generateEndOfPages(model, p.name)/]
	[/if]
[/for]

[model.generateMappings()/]

[model.generateServiceElement()/]

[model.pages.generateTestClass()/]

[/template]
